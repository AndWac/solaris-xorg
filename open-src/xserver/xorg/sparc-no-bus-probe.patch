--- a/hw/xfree86/common/xf86Init.c	Fri Aug 10 17:42:37 2012
+++ b/hw/xfree86/common/xf86Init.c	Fri Aug 10 19:45:41 2012
@@ -453,7 +453,9 @@
             DoShowOptions();
 
         /* Do a general bus probe.  This will be a PCI probe for x86 platforms */
+#if (!defined(__sparc__) && !defined(__sparc))
         xf86BusProbe();
+#endif
 
         if (xf86DoConfigure)
             DoConfigure();
--- a/hw/xfree86/common/xf86pciBus.h	Fri Aug 17 15:28:07 2012
+++ b/hw/xfree86/common/xf86pciBus.h	Fri Aug 17 15:25:34 2012
@@ -35,7 +35,9 @@
 
 void xf86PciProbe(void);
 Bool xf86PciAddMatchingDev(DriverPtr drvp);
+#if (!defined(__sparc__) &&  !defined(__sparc))
 Bool xf86PciProbeDev(DriverPtr drvp);
+#endif
 void xf86PciIsolateDevice(char *argument);
 int xf86PciMatchDriver(char *matches[], int nmatches);
 Bool xf86PciConfigure(void *busData, struct pci_device *pDev);
--- a/hw/xfree86/common/xf86Priv.h	Fri Aug 10 21:43:08 2012
+++ b/hw/xfree86/common/xf86Priv.h	Fri Aug 17 15:26:21 2012
@@ -117,6 +117,11 @@
 extern _X_EXPORT void xf86ClearEntityListForScreen(int scrnIndex);
 extern _X_EXPORT void xf86AddDevToEntity(int entityIndex, GDevPtr dev);
 
+/* xf86pciBus.c */
+#if (defined(__sparc__) || defined(__sparc))
+extern _X_EXPORT Bool xf86PciProbeDev(DriverPtr drvp);
+#endif
+
 /* xf86Config.c */
 
 extern _X_EXPORT Bool xf86PathIsSafe(const char *path);
--- a/hw/xfree86/common/xf86AutoConfig.c	Fri Aug 24 11:29:28 2012
+++ b/hw/xfree86/common/xf86AutoConfig.c	Fri Aug 24 12:14:43 2012
@@ -215,6 +215,10 @@
     return ret == CONFIG_OK;
 }
 
+#if (defined(__sparc__) || defined(__sparc))
+#define xf86SolarisFb0Dev	"/dev/fb0"
+#endif
+
 static void
 listPossibleVideoDrivers(char *matches[], int nmatches)
 {
@@ -250,6 +254,19 @@
             close(fbfd);
         }
     }
+#if (defined(__sparc__) || defined(__sparc))
+    if (!got_vis_id) {
+        int fbfd;
+
+        fbfd = open(xf86SolarisFb0Dev, O_RDONLY);
+        if (fbfd >= 0) {
+            SYSCALL(iret = ioctl(fbfd, VIS_GETIDENTIFIER, &visid));
+            if (iret >= 0)
+                got_vis_id = 1;
+            close(fbfd);
+        }
+    }
+#endif
     if (got_vis_id) {
         const char *cp;
 
